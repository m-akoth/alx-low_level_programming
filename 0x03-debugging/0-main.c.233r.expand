
;; Function main (main, funcdef_no=0, decl_uid=2318, cgraph_uid=1, symbol_order=0)

main ()
{
  int i;
  int D.2322;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_1 = 0;
  positive_or_negative (i_1);
  _4 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 4 (_4 - 4 )
Partition 5 (_5(D) - 5 )


Coalescible Partition map 

Partition 0, base 0 (_5(D) - 5 )


Partition map 

Partition 0 (_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (_4 - 4 )
Partition 2 (_5(D) - 5 )

main ()
{
  int i;
  int D.2322;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_1 = 0;
  positive_or_negative (i_1);
  _4 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_1 = 0;

(insn 5 4 0 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "0-main.c":12:4 -1
     (nil))

;; positive_or_negative (i_1);

(insn 6 5 7 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "0-main.c":13:2 -1
     (nil))

(insn 7 6 8 (set (reg:SI 5 di)
        (reg:SI 84)) "0-main.c":13:2 -1
     (nil))

(call_insn 8 7 0 (call (mem:QI (symbol_ref:DI ("positive_or_negative") [flags 0x41]  <function_decl 0x7f86a82b9800 positive_or_negative>) [0 positive_or_negative S1 A8])
        (const_int 0 [0])) "0-main.c":13:2 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; _4 = 0;

(insn 9 8 0 (set (reg:SI 82 [ _4 ])
        (const_int 0 [0])) "0-main.c":15:9 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 10 9 11 2 (nil) [0 uses])

(note 11 10 0 NOTE_INSN_BASIC_BLOCK)

;; return _4;

(insn 12 11 13 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _4 ])) "0-main.c":15:9 -1
     (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 0)) "0-main.c":15:9 -1
     (nil))

(barrier 14 13 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 13.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "0-main.c":12:4 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "0-main.c":13:2 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 5 di)
        (reg:SI 84)) "0-main.c":13:2 -1
     (nil))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("positive_or_negative") [flags 0x41]  <function_decl 0x7f86a82b9800 positive_or_negative>) [0 positive_or_negative S1 A8])
        (const_int 0 [0])) "0-main.c":13:2 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg:SI 82 [ _4 ])
        (const_int 0 [0])) "0-main.c":15:9 -1
     (nil))
(insn 12 9 16 2 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _4 ])) "0-main.c":15:9 -1
     (nil))
(insn 16 12 17 2 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "0-main.c":16:1 -1
     (nil))
(insn 17 16 0 2 (use (reg/i:SI 0 ax)) "0-main.c":16:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

